// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/goods/goods.proto

package goods

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Goods struct {
	PluCode              string   `protobuf:"bytes,1,opt,name=PluCode,proto3" json:"PluCode,omitempty"`
	PluName              string   `protobuf:"bytes,2,opt,name=PluName,proto3" json:"PluName,omitempty"`
	BarCode              string   `protobuf:"bytes,3,opt,name=BarCode,proto3" json:"BarCode,omitempty"`
	Unit                 string   `protobuf:"bytes,4,opt,name=Unit,proto3" json:"Unit,omitempty"`
	Spec                 string   `protobuf:"bytes,5,opt,name=Spec,proto3" json:"Spec,omitempty"`
	Weigt                string   `protobuf:"bytes,6,opt,name=Weigt,proto3" json:"Weigt,omitempty"`
	DepCode              string   `protobuf:"bytes,7,opt,name=DepCode,proto3" json:"DepCode,omitempty"`
	Produce              string   `protobuf:"bytes,8,opt,name=Produce,proto3" json:"Produce,omitempty"`
	Grade                string   `protobuf:"bytes,9,opt,name=Grade,proto3" json:"Grade,omitempty"`
	SupCode              string   `protobuf:"bytes,10,opt,name=SupCode,proto3" json:"SupCode,omitempty"`
	ClsCode              string   `protobuf:"bytes,11,opt,name=ClsCode,proto3" json:"ClsCode,omitempty"`
	BrandCode            string   `protobuf:"bytes,12,opt,name=BrandCode,proto3" json:"BrandCode,omitempty"`
	HJPrice              string   `protobuf:"bytes,13,opt,name=HJPrice,proto3" json:"HJPrice,omitempty"`
	WJPrice              string   `protobuf:"bytes,14,opt,name=WJPrice,proto3" json:"WJPrice,omitempty"`
	SPrice               string   `protobuf:"bytes,15,opt,name=SPrice,proto3" json:"SPrice,omitempty"`
	HyPrice              string   `protobuf:"bytes,16,opt,name=HyPrice,proto3" json:"HyPrice,omitempty"`
	PfPrice              string   `protobuf:"bytes,17,opt,name=PfPrice,proto3" json:"PfPrice,omitempty"`
	JTaxRate             string   `protobuf:"bytes,18,opt,name=JTaxRate,proto3" json:"JTaxRate,omitempty"`
	XTaxRate             string   `protobuf:"bytes,19,opt,name=XTaxRate,proto3" json:"XTaxRate,omitempty"`
	CgyCode              string   `protobuf:"bytes,20,opt,name=CgyCode,proto3" json:"CgyCode,omitempty"`
	CgyName              string   `protobuf:"bytes,21,opt,name=CgyName,proto3" json:"CgyName,omitempty"`
	XgDate               string   `protobuf:"bytes,22,opt,name=XgDate,proto3" json:"XgDate,omitempty"`
	LrDate               string   `protobuf:"bytes,23,opt,name=LrDate,proto3" json:"LrDate,omitempty"`
	UserCode             string   `protobuf:"bytes,24,opt,name=UserCode,proto3" json:"UserCode,omitempty"`
	UserName             string   `protobuf:"bytes,25,opt,name=UserName,proto3" json:"UserName,omitempty"`
	PackPriceType        string   `protobuf:"bytes,26,opt,name=PackPriceType,proto3" json:"PackPriceType,omitempty"`
	PackPriceRate        string   `protobuf:"bytes,27,opt,name=PackPriceRate,proto3" json:"PackPriceRate,omitempty"`
	PluStatus            string   `protobuf:"bytes,28,opt,name=PluStatus,proto3" json:"PluStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Goods) Reset()         { *m = Goods{} }
func (m *Goods) String() string { return proto.CompactTextString(m) }
func (*Goods) ProtoMessage()    {}
func (*Goods) Descriptor() ([]byte, []int) {
	return fileDescriptor_42ff7bf58be59df1, []int{0}
}

func (m *Goods) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Goods.Unmarshal(m, b)
}
func (m *Goods) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Goods.Marshal(b, m, deterministic)
}
func (m *Goods) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Goods.Merge(m, src)
}
func (m *Goods) XXX_Size() int {
	return xxx_messageInfo_Goods.Size(m)
}
func (m *Goods) XXX_DiscardUnknown() {
	xxx_messageInfo_Goods.DiscardUnknown(m)
}

var xxx_messageInfo_Goods proto.InternalMessageInfo

func (m *Goods) GetPluCode() string {
	if m != nil {
		return m.PluCode
	}
	return ""
}

func (m *Goods) GetPluName() string {
	if m != nil {
		return m.PluName
	}
	return ""
}

func (m *Goods) GetBarCode() string {
	if m != nil {
		return m.BarCode
	}
	return ""
}

func (m *Goods) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *Goods) GetSpec() string {
	if m != nil {
		return m.Spec
	}
	return ""
}

func (m *Goods) GetWeigt() string {
	if m != nil {
		return m.Weigt
	}
	return ""
}

func (m *Goods) GetDepCode() string {
	if m != nil {
		return m.DepCode
	}
	return ""
}

func (m *Goods) GetProduce() string {
	if m != nil {
		return m.Produce
	}
	return ""
}

func (m *Goods) GetGrade() string {
	if m != nil {
		return m.Grade
	}
	return ""
}

func (m *Goods) GetSupCode() string {
	if m != nil {
		return m.SupCode
	}
	return ""
}

func (m *Goods) GetClsCode() string {
	if m != nil {
		return m.ClsCode
	}
	return ""
}

func (m *Goods) GetBrandCode() string {
	if m != nil {
		return m.BrandCode
	}
	return ""
}

func (m *Goods) GetHJPrice() string {
	if m != nil {
		return m.HJPrice
	}
	return ""
}

func (m *Goods) GetWJPrice() string {
	if m != nil {
		return m.WJPrice
	}
	return ""
}

func (m *Goods) GetSPrice() string {
	if m != nil {
		return m.SPrice
	}
	return ""
}

func (m *Goods) GetHyPrice() string {
	if m != nil {
		return m.HyPrice
	}
	return ""
}

func (m *Goods) GetPfPrice() string {
	if m != nil {
		return m.PfPrice
	}
	return ""
}

func (m *Goods) GetJTaxRate() string {
	if m != nil {
		return m.JTaxRate
	}
	return ""
}

func (m *Goods) GetXTaxRate() string {
	if m != nil {
		return m.XTaxRate
	}
	return ""
}

func (m *Goods) GetCgyCode() string {
	if m != nil {
		return m.CgyCode
	}
	return ""
}

func (m *Goods) GetCgyName() string {
	if m != nil {
		return m.CgyName
	}
	return ""
}

func (m *Goods) GetXgDate() string {
	if m != nil {
		return m.XgDate
	}
	return ""
}

func (m *Goods) GetLrDate() string {
	if m != nil {
		return m.LrDate
	}
	return ""
}

func (m *Goods) GetUserCode() string {
	if m != nil {
		return m.UserCode
	}
	return ""
}

func (m *Goods) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *Goods) GetPackPriceType() string {
	if m != nil {
		return m.PackPriceType
	}
	return ""
}

func (m *Goods) GetPackPriceRate() string {
	if m != nil {
		return m.PackPriceRate
	}
	return ""
}

func (m *Goods) GetPluStatus() string {
	if m != nil {
		return m.PluStatus
	}
	return ""
}

type ListQuery struct {
	Limit                int64    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page                 int64    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Sort                 string   `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListQuery) Reset()         { *m = ListQuery{} }
func (m *ListQuery) String() string { return proto.CompactTextString(m) }
func (*ListQuery) ProtoMessage()    {}
func (*ListQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_42ff7bf58be59df1, []int{1}
}

func (m *ListQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListQuery.Unmarshal(m, b)
}
func (m *ListQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListQuery.Marshal(b, m, deterministic)
}
func (m *ListQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListQuery.Merge(m, src)
}
func (m *ListQuery) XXX_Size() int {
	return xxx_messageInfo_ListQuery.Size(m)
}
func (m *ListQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_ListQuery.DiscardUnknown(m)
}

var xxx_messageInfo_ListQuery proto.InternalMessageInfo

func (m *ListQuery) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListQuery) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListQuery) GetSort() string {
	if m != nil {
		return m.Sort
	}
	return ""
}

type Request struct {
	ListQuery            *ListQuery `protobuf:"bytes,1,opt,name=list_query,json=listQuery,proto3" json:"list_query,omitempty"`
	Goods                *Goods     `protobuf:"bytes,2,opt,name=goods,proto3" json:"goods,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_42ff7bf58be59df1, []int{2}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetListQuery() *ListQuery {
	if m != nil {
		return m.ListQuery
	}
	return nil
}

func (m *Request) GetGoods() *Goods {
	if m != nil {
		return m.Goods
	}
	return nil
}

type Response struct {
	Valid                bool     `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	Total                int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Goods                *Goods   `protobuf:"bytes,3,opt,name=goods,proto3" json:"goods,omitempty"`
	Goodss               []*Goods `protobuf:"bytes,4,rep,name=goodss,proto3" json:"goodss,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_42ff7bf58be59df1, []int{3}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *Response) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Response) GetGoods() *Goods {
	if m != nil {
		return m.Goods
	}
	return nil
}

func (m *Response) GetGoodss() []*Goods {
	if m != nil {
		return m.Goodss
	}
	return nil
}

func init() {
	proto.RegisterType((*Goods)(nil), "goods.Goods")
	proto.RegisterType((*ListQuery)(nil), "goods.ListQuery")
	proto.RegisterType((*Request)(nil), "goods.Request")
	proto.RegisterType((*Response)(nil), "goods.Response")
}

func init() { proto.RegisterFile("proto/goods/goods.proto", fileDescriptor_42ff7bf58be59df1) }

var fileDescriptor_42ff7bf58be59df1 = []byte{
	// 535 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x94, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x09, 0x49, 0x9c, 0x78, 0xd2, 0x7f, 0x2c, 0x25, 0x5d, 0x42, 0x0e, 0x55, 0xd4, 0x03,
	0x5c, 0x5a, 0x29, 0x7d, 0x83, 0xb6, 0x52, 0xa1, 0xaa, 0x50, 0x70, 0x5a, 0xb5, 0x27, 0xd0, 0x12,
	0x2f, 0x96, 0x85, 0x1b, 0xbb, 0xde, 0x35, 0xc2, 0x37, 0x5e, 0x98, 0x77, 0x40, 0xf3, 0xc7, 0x8e,
	0x0a, 0xe2, 0x12, 0xed, 0xf7, 0xfd, 0xc6, 0xdf, 0xec, 0xc8, 0xe3, 0xc0, 0x41, 0x51, 0xe6, 0x3e,
	0x3f, 0x49, 0xf2, 0x3c, 0x76, 0xfc, 0x7b, 0x4c, 0x8e, 0xea, 0x93, 0x98, 0xfd, 0xee, 0x43, 0xff,
	0x12, 0x4f, 0x4a, 0xc3, 0x60, 0x91, 0x55, 0xe7, 0x79, 0x6c, 0x75, 0xe7, 0xb0, 0xf3, 0x36, 0x8c,
	0x1a, 0x29, 0xe4, 0xa3, 0x79, 0xb0, 0xfa, 0x79, 0x4b, 0x50, 0x22, 0x39, 0x33, 0x25, 0x3d, 0xd3,
	0x65, 0x22, 0x52, 0x29, 0xe8, 0xdd, 0xae, 0x53, 0xaf, 0x7b, 0x64, 0xd3, 0x19, 0xbd, 0x65, 0x61,
	0x57, 0xba, 0xcf, 0x1e, 0x9e, 0xd5, 0x3e, 0xf4, 0xef, 0x6c, 0x9a, 0x78, 0x1d, 0x90, 0xc9, 0x02,
	0x73, 0x2f, 0x6c, 0x41, 0xb9, 0x03, 0xce, 0x15, 0x49, 0x77, 0x29, 0xf3, 0xb8, 0x5a, 0x59, 0x3d,
	0x94, 0xbb, 0xb0, 0xc4, 0xa4, 0xcb, 0xd2, 0xc4, 0x56, 0x87, 0x9c, 0x44, 0x02, 0xeb, 0x97, 0x15,
	0x27, 0x01, 0xd7, 0x8b, 0x44, 0x72, 0x9e, 0x39, 0x22, 0x23, 0x26, 0x22, 0xd5, 0x14, 0xc2, 0xb3,
	0xd2, 0xac, 0x63, 0x62, 0x5b, 0xc4, 0x36, 0x06, 0x3e, 0xf7, 0xfe, 0x6a, 0x51, 0xa6, 0x2b, 0xab,
	0xb7, 0xf9, 0x39, 0x91, 0x48, 0xee, 0x84, 0xec, 0x30, 0x11, 0xa9, 0xc6, 0x10, 0x2c, 0x19, 0xec,
	0x12, 0x10, 0x45, 0x59, 0x35, 0x83, 0x3d, 0xc9, 0xaa, 0x5b, 0xb2, 0xf8, 0xc6, 0xe4, 0x85, 0xcc,
	0xc9, 0x52, 0x4d, 0x60, 0x78, 0x75, 0x63, 0x7e, 0x46, 0xc6, 0x5b, 0xad, 0x08, 0xb5, 0x1a, 0xd9,
	0x7d, 0xc3, 0x5e, 0x32, 0x6b, 0x34, 0xcd, 0x9b, 0xd4, 0x34, 0xd3, 0xbe, 0xcc, 0xcb, 0x52, 0x08,
	0xbd, 0xdf, 0x57, 0x2d, 0xa1, 0xf7, 0x3b, 0x86, 0xe0, 0x3e, 0xb9, 0xc0, 0xb4, 0x31, 0xdf, 0x9b,
	0x15, 0xfa, 0xd7, 0x25, 0xf9, 0x07, 0xec, 0xb3, 0xc2, 0xfe, 0xb7, 0xce, 0xf2, 0x42, 0x68, 0xee,
	0xdf, 0xe8, 0x86, 0x51, 0x9b, 0xd7, 0x1b, 0x46, 0x7d, 0x8e, 0x60, 0x7b, 0x61, 0x56, 0xdf, 0x69,
	0xc0, 0x9b, 0xba, 0xb0, 0x7a, 0x42, 0x05, 0x4f, 0xcd, 0x27, 0x55, 0x34, 0xe2, 0x9b, 0xbf, 0xaa,
	0x68, 0xce, 0x29, 0x84, 0x8b, 0xac, 0x5a, 0x7a, 0xe3, 0x2b, 0xa7, 0xa7, 0xfc, 0xf6, 0x5a, 0x63,
	0xf6, 0x01, 0xc2, 0xeb, 0xd4, 0xf9, 0x4f, 0x95, 0x2d, 0x6b, 0x5c, 0x99, 0x2c, 0x7d, 0x48, 0x3d,
	0x2d, 0x7c, 0x37, 0x62, 0x81, 0x6b, 0x5a, 0x98, 0x84, 0x77, 0xbd, 0x1b, 0xd1, 0x19, 0x3d, 0x97,
	0x97, 0x5e, 0xb6, 0x9c, 0xce, 0xb3, 0xcf, 0x30, 0x88, 0xec, 0x63, 0x65, 0x9d, 0x57, 0x27, 0x00,
	0x59, 0xea, 0xfc, 0x97, 0x47, 0x8c, 0xa5, 0xb4, 0xd1, 0x7c, 0xef, 0x98, 0x3f, 0xb7, 0xb6, 0x5d,
	0x14, 0x66, 0x6d, 0xe7, 0x19, 0xf0, 0xf7, 0x47, 0x4d, 0x46, 0xf3, 0x2d, 0xa9, 0xa5, 0x2f, 0x31,
	0x92, 0x4f, 0xf3, 0x57, 0x07, 0x86, 0x91, 0x75, 0x45, 0xbe, 0x76, 0xb4, 0xdd, 0x3f, 0x4c, 0x96,
	0xc6, 0x14, 0x3e, 0x8c, 0x58, 0xa0, 0xeb, 0x73, 0x6f, 0x32, 0xb9, 0x2b, 0x8b, 0x4d, 0x78, 0xf7,
	0xbf, 0xe1, 0xea, 0x08, 0x02, 0x3a, 0x38, 0xdd, 0x3b, 0xec, 0xfe, 0x53, 0x24, 0x6c, 0x7e, 0x0a,
	0x01, 0x19, 0x4e, 0xbd, 0x83, 0x1e, 0x0e, 0xa2, 0x76, 0xa4, 0x4e, 0x26, 0x9f, 0xec, 0xb6, 0x9a,
	0x2f, 0x3a, 0x7b, 0xf6, 0x35, 0xa0, 0x3f, 0x98, 0xd3, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x24,
	0x69, 0x06, 0x1c, 0x7b, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Goodss service

type GoodssClient interface {
	// 获取用户列表
	List(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
}

type goodssClient struct {
	c           client.Client
	serviceName string
}

func NewGoodssClient(serviceName string, c client.Client) GoodssClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "goods"
	}
	return &goodssClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *goodssClient) List(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Goodss.List", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Goodss service

type GoodssHandler interface {
	// 获取用户列表
	List(context.Context, *Request, *Response) error
}

func RegisterGoodssHandler(s server.Server, hdlr GoodssHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Goodss{hdlr}, opts...))
}

type Goodss struct {
	GoodssHandler
}

func (h *Goodss) List(ctx context.Context, in *Request, out *Response) error {
	return h.GoodssHandler.List(ctx, in, out)
}
